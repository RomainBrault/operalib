# make it explicit that we favor the new container-based travis workers
sudo: false

language: python

cache:
  apt: true
  directories:
  - $HOME/.cache/pip
  - $HOME/download

addons:
  apt:
    packages:
      # cvxopt
      - libdsdp-dev
      - libfftw3-dev
      - libglpk-dev

      # gcc (libgfortran)
      - gcc
      - gcc-dev

      # sklearn
      - libatlas3gf-base
      - libatlas-dev
      - liblapack-dev

      # only required by the DISTRIB="ubuntu" build:
      - python-scipy
      - python-tk

dist: trustyÂ§
env:
  global:
    # Directory where tests are run from
    - TEST_DIR=/tmp/operalib/
    - OMP_NUM_THREADS=4
    - OPENBLAS_NUM_THREADS=4
    - MODULE=operalib
  matrix:
    # This environment tests that scikit-learn can be built against
    # versions of numpy, scipy with ATLAS that comes with Ubuntu Thrusty 14.04
    - DISTRIB="ubuntu" PYTHON_VERSION="2.7" COVERAGE="true"
      CYTHON_VERSION="0.23.4" SCIKIT_VERSION="0.17"
      CACHED_BUILD_DIR="$HOME/operalib_build_ubuntu"
    # This environment tests the oldest anaconda env supported by Operalib.
    - DISTRIB="conda" PYTHON_VERSION="2.7" COVERAGE="true" INSTALL_MKL="false"
      NUMPY_VERSION="1.12.1" SCIPY_VERSION="0.18.1"
      CYTHON_VERSION="0.23.4" SCIKIT_VERSION="0.17"
      CACHED_BUILD_DIR="$HOME/operalib_build_oldest"
    # This environment tests the newest supported anaconda env
    - DISTRIB="conda" PYTHON_VERSION="3.6" COVERAGE="true" INSTALL_MKL="true"
      CACHED_BUILD_DIR="$HOME/operalib_build_latest"

matrix:
  fast_finish: true
  allow_failures:
    # allow failures for DISTRIB=scipy-dev-wheels
    - python: "3.6"

  include:
    # This environment tests operalib against numpy and scipy master
    # installed from their CI wheels in a virtualenv with the Python
    # interpreter provided by travis. It also test against scikit-learn master
    # installed from its git repository.
    # Note: libatlas3gf-base is not allowed yet so we need 'sudo':
    # https://github.com/travis-ci/apt-package-whitelist/issues/2407
    # Once libatlas3gf-base is on the whitelist it will be possible to replace
    # the before_install step with and addons/apt/packages declaration.
    -  python: "3.6"
       env: DISTRIB="scipy-dev-wheels"
            CACHED_BUILD_DIR="$HOME/operalib_build_numpy_dev"
       sudo: True
       before_install: sudo apt-get install -yqq libatlas3gf-base libatlas-dev

# Workaround for suitesparse and control
before_install:
  - locate libgfortran
  - pushd ${HOME}
  - wget http://faculty.cse.tamu.edu/davis/SuiteSparse/SuiteSparse-4.5.3.tar.gz
  - tar -xf SuiteSparse-4.5.3.tar.gz
  - export CVXOPT_SUITESPARSE_SRC_DIR=$(pwd)/SuiteSparse]
  - popd
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib64/
install: source ci_scripts/install.sh
script: bash ci_scripts/test.sh
after_success: source ci_scripts/success.sh
