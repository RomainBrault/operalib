# make it explicit that we favor the new container-based travis workers
sudo: false

language: python

cache:
  apt: true
  pip: true
  # We use six different cache directory
  # to work around a Travis bug with multi-platform cache
  directories:
  - $HOME/operalib_build_ubuntu
  - $HOME/operalib_build_oldest
  - $HOME/operalib_build_latest
  - $HOME/operalib_build_numpy_dev
  - $HOME/.cache/pip
  - $HOME/download

addons:
  apt:
    packages:
      - libatlas3gf-base
      - libatlas-dev
      - liblapack-dev
      # only required by the DISTRIB="ubuntu" build:
      - python-scipy

env:
  global:
    # Directory where tests are run from
    - TEST_DIR=/tmp/operalib/
    - OMP_NUM_THREADS=4
    - OPENBLAS_NUM_THREADS=4
    - MODULE=operalib
  matrix:
    # This environment tests that scikit-learn can be built against
    # versions of numpy, scipy with ATLAS that comes with Ubuntu Precise 12.04
    - DISTRIB="ubuntu" PYTHON_VERSION="2.7" COVERAGE="true"
      CYTHON_VERSION="0.23.4" SCIKIT_VERSION="0.17"
      CACHED_BUILD_DIR="$HOME/operalib_build_ubuntu"
    # - DISTRIB="conda" PYTHON_VERSION="2.7" COVERAGE="true" INSTALL_MKL="false"
    #   NUMPY_VERSION="1.9.2" SCIPY_VERSION="0.16.0" 
    #   CYTHON_VERSION="0.21" SCIKIT_VERSION="0.17"
    #   CACHED_BUILD_DIR="$HOME/operalib_build_oldest"
    # This environment tests the oldest supported anaconda env. Does't work now
    # due to travis memory error. Would be nice to support this...
    # - DISTRIB="conda" PYTHON_VERSION="2.6" COVERAGE="true" INSTALL_MKL="false"
    #   NUMPY_VERSION="1.6.2" SCIPY_VERSION="0.11.0"
    #   CYTHON_VERSION="0.21" SCIKIT_VERSION="0.17"
    #   CACHED_BUILD_DIR="$HOME/operalib_build_oldest"
    # This environment tests the newest supported anaconda env
    - DISTRIB="conda" PYTHON_VERSION="3.5" COVERAGE="true" INSTALL_MKL="true"
      NUMPY_VERSION="1.11.1" SCIPY_VERSION="0.17.1"
      CYTHON_VERSION="0.23.4" SCIKIT_VERSION="0.17"
      CACHED_BUILD_DIR="$HOME/operalib_build_latest"

matrix:
  fast_finish: true
  allow_failures:
    # allow failures for DISTRIB=scipy-dev-wheels
    - python: "3.5"

  include:
    # This environment tests operalib against numpy and scipy master
    # installed from their CI wheels in a virtualenv with the Python
    # interpreter provided by travis. It also test against scikit-learn master
    # installed from its git repository.
    # Note: libatlas3gf-base is not allowed yet so we need 'sudo':
    # https://github.com/travis-ci/apt-package-whitelist/issues/2407
    # Once libatlas3gf-base is on the whitelist it will be possible to replace
    # the before_install step with and addons/apt/packages declaration.
    -  python: "3.5"
       env: DISTRIB="scipy-dev-wheels"
            CACHED_BUILD_DIR="$HOME/operalib_build_numpy_dev"
       sudo: True
       before_install: sudo apt-get install -yqq libatlas3gf-base libatlas-dev

install: source ci_scripts/install.sh
script: bash ci_scripts/test.sh
after_success: source ci_scripts/success.sh
